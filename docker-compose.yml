services:
  # frontend:
  #   build:
  #     context: ./navigation-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     - TOMTOM_URL=${TOMTOM_URL}
  #     - TOMTOM_APIKEY=${TOMTOM_APIKEY}
  #     - GEOAPIFY_URL=${GEOAPIFY_URL}
  #     - GEOAPIFY_APIKEY=${GEOAPIFY_APIKEY}
  #   develop:
  #     watch:
  #       - action: rebuild
  #         path: ./navigation-service
  #   networks:
  #     - backend
  api:
    build:
      context: ./API
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    develop:
      watch:
        - action: rebuild
          path: ./API
    networks:
      - backend-net
  mysql:
    image: 'mysql:8.0'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sql_db
      MYSQL_USER: victor
      MYSQL_PASSWORD: victor
    ports:
      - "3305:3306"
    networks:
      - backend-net
    volumes:
      - sql_db_vol:/var/lib/sql_db_vol
networks:
  backend-net:
    driver: bridge
  frontend-net:
    driver: bridge
  database-net:
    driver: bridge
volumes: 
  sql_db_vol: