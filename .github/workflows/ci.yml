name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  run_backend_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: API

      - name: Build project
        run: dotnet build --configuration Release
        working-directory: API

      - name: Run API tests
        run: dotnet test --configuration Release --no-build --verbosity normal
        working-directory: API

  run_frontend_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Locale to French (fr_FR.UTF-8)
        run: |
          sudo locale-gen fr_FR.UTF-8
          sudo update-locale LANG=fr_FR.UTF-8 LC_ALL=fr_FR.UTF-8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Run frontend unit tests
        run: npm test
        working-directory: frontend

  run_cypress_tests:
    runs-on: ubuntu-latest
    needs: [run_backend_tests, run_frontend_tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Start the app
        run: npm start &
        working-directory: frontend

      - name: Wait for the app to be ready
        run: npx wait-on http://127.0.0.1:8000
        continue-on-error: true 

      - name: Run Cypress tests
        run: npx cypress run --headless --browser chrome
        working-directory: frontend

  security_check:
    runs-on: ubuntu-latest
    needs: [run_backend_tests, run_frontend_tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Run .NET vulnerable packages check
        run: |
          dotnet list package --vulnerable --format json
        working-directory: ./API

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      - name: Run npm audit (check vulnerabilities)
        run: npm audit --production --json
        working-directory: frontend

  build_solution:
    runs-on: ubuntu-latest
    needs: [security_check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: API

      - name: Build backend
        run: dotnet build --configuration Release
        working-directory: API

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

  deploy_solution:
    runs-on: ubuntu-latest
    needs: build_solution
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Echo deploy step
        run: echo "Deployment step (simulated). Solution deployed."